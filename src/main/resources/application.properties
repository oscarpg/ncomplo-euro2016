spring.profiles.active=dev

spring.messages.basename=Messages
spring.messages.encoding=ISO-8859-1
spring.messages.cacheSeconds=-1

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true

multipart.maxFileSize: 2Mb
multipart.maxRequestSize: 2Mb

server.session.timeout=18000

ncomplo.bettype.defaultGroupsSpec=if(game.scoreA && game.scoreB) {if(bet.scoreA==game.scoreA && bet.scoreB==game.scoreB) {result.winLevel=2;result.points = 5;} else {if(bet.scoreA>bet.scoreB && game.scoreA>game.scoreB) {result.winLevel=1;result.points = 2;} else {if(bet.scoreA<bet.scoreB && game.scoreA<game.scoreB) {result.winLevel=1;result.points = 2;} else {if(bet.scoreA==bet.scoreB && game.scoreA==game.scoreB) {result.winLevel=1;result.points = 2;} else {result.winLevel=0;result.points = 0;}}}}}
ncomplo.bettype.defaultRoundOf16Spec=var totalPoints=0;var foundA = false;var foundB = false;var existsGamesInRound = false;for (var i=0;i<allGameSidesInRound.size();i++) {var gameSide = allGameSidesInRound.get(i);if (gameSide) {existsGamesInRound = true;if (bet.gameSideA != null && bet.gameSideA.name == gameSide.name) {foundA=true;totalPoints += 5;}if (bet.gameSideB != null && bet.gameSideB.name == gameSide.name) {foundB = true;totalPoints += 5;}}}if (existsGamesInRound) {result.points = totalPoints;if(foundA) {result.sideAWinLevel = 2;} else {result.sideAWinLevel = 0;}if(foundB) {result.sideBWinLevel = 2;} else {result.sideBWinLevel = 0;}}
ncomplo.bettype.defaultQuarterFinalsSpec=var totalPoints=0;var foundA = false;var foundB = false;var existsGamesInRound = false;for (var i=0;i<allGameSidesInRound.size();i++) {var gameSide = allGameSidesInRound.get(i);if (gameSide) {existsGamesInRound = true;if (bet.gameSideA != null && bet.gameSideA.name == gameSide.name) {foundA=true;totalPoints += 15;}if (bet.gameSideB != null && bet.gameSideB.name == gameSide.name) {foundB = true;totalPoints += 15;}}}if (existsGamesInRound) {result.points = totalPoints;if(foundA) {result.sideAWinLevel = 2;} else {result.sideAWinLevel = 0;}if(foundB) {result.sideBWinLevel = 2;} else {result.sideBWinLevel = 0;}}
ncomplo.bettype.defaultSemiFinalsSpec=var totalPoints=0;var foundA = false;var foundB = false;var existsGamesInRound = false;for (var i=0;i<allGameSidesInRound.size();i++) {var gameSide = allGameSidesInRound.get(i);if (gameSide) {existsGamesInRound = true;if (bet.gameSideA != null && bet.gameSideA.name == gameSide.name) {foundA=true;totalPoints += 25;}if (bet.gameSideB != null && bet.gameSideB.name == gameSide.name) {foundB = true;totalPoints += 25;}}}if (existsGamesInRound) {result.points = totalPoints;if(foundA) {result.sideAWinLevel = 2;} else {result.sideAWinLevel = 0;}if(foundB) {result.sideBWinLevel = 2;} else {result.sideBWinLevel = 0;}}
ncomplo.bettype.defaultFinalSpec=var totalPoints=0;var foundA = false;var foundB = false;var existsGamesInRound = false;for (var i=0;i<allGameSidesInRound.size();i++) {var gameSide = allGameSidesInRound.get(i);if (gameSide) {existsGamesInRound = true;if (bet.gameSideA != null && bet.gameSideA.name == gameSide.name) {foundA=true;totalPoints += 35;}if (bet.gameSideB != null && bet.gameSideB.name == gameSide.name) {foundB = true;totalPoints += 35;}}}if ((game.scoreA > game.scoreB) && (result.betWinner != null) && (game.gameSideA.name == result.betWinner.name)) {totalPoints += 50;}if ((game.scoreB > game.scoreA) && (result.betWinner != null) && (game.gameSideB.name == result.betWinner.name)) {totalPoints += 50;}if (existsGamesInRound) {result.points = totalPoints;if(foundA) {result.sideAWinLevel = 2;} else {result.sideAWinLevel = 0;}if(foundB) {result.sideBWinLevel = 2;} else {result.sideBWinLevel = 0;}}

emailservice.enabled=true
ncomplo.email.sendgrid.enabled=false

ncomplo.server.url=https://dndgames-02b779b2d9cc.herokuapp.com

